### Variables

# Set cursor theme
seat seat0 xcursor_theme breeze_cursors 24

# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
set $term kitty

# Set emacsclient
set $emacs emacsclient -c -a 'emacs'

# Browser
set $browser firefox

# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu rofi -show drun | xargs swaymsg exec --

# Clipman using rofi with custom config
set $clip clipman pick --tool=CUSTOM -T 'rofi -dmenu -p 'ó°¨¸' -config ~/.config/rofi/clipboard/config.rasi'

# Controller script for volume and brightness that work with wob
set $controller $HOME/.local/bin/controller.sh
set $powermenu $HOME/.local/bin/rofi_power.sh

### Output configuration

# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg $HOME/Pictures/Wallpapers/pastel-samurai.png fill

# Disable window titlebar
default_border pixel 2

# Add gaps all around any window, not just gaps around waybar and screen
gaps inner 10

# Focus on click/keybinding instead of mouse hover
focus_follows_mouse no

# Focus when urgent hinted (useful when click on notification daemon)
focus_on_window_activation focus
force_display_urgency_hint 3000

#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration

# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
# You can set how input interact manually

# input <indentifier>
input "1267:12734:MSFT0001:00_04F3:31BE_Touchpad" {
	tap enabled
	natural_scroll enabled
	# dwt enabled
	# middle_emulation enabled
}

# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings

bindsym $mod+Return exec $term  # Launch terminal
bindsym $mod+x exec $emacs      # Launch Emacs
bindsym $mod+b exec $browser    # Launch a browser
bindsym $mod+r exec $menu       # Start your launcher
bindsym $mod+p exec $clip 		# Clipman

bindsym $mod+q kill             # Kill focused window

# Reload the configuration file
bindsym $mod+Ctrl+r reload

# Exit sway (logs you out of your Wayland session)
# bindsym $mod+Shift+q exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
bindsym $mod+Shift+q exec $powermenu

# Volume/Mic Keys
bindsym XF86AudioLowerVolume exec $controller "lv"
bindsym XF86AudioRaiseVolume exec $controller "rv"
bindsym XF86AudioMute exec $controller "ms"
bindsym XF86AudioMicMute exec $controller "mm"

# Brightness Keys
bindsym XF86MonBrightnessUp exec $controller "bu"
bindsym XF86MonBrightnessDown exec $controller "bd"

# Screenshot
bindsym Print exec $HOME/.local/bin/custom_grim.sh

## Moving around:

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Focus next container in current workspace
bindsym $mod+w focus next
bindsym $mod+Shift+w focus prev

# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

## Workspaces:

# Previous workspace
bindsym $mod+Tab workspace back_and_forth

# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10

## Layout stuff:

# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
#split h 0.168
bindsym $mod+Shift+b splith
bindsym $mod+Shift+v splitv

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+s floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent

# Use touchpad to change workspace
bindgesture swipe:right workspace prev
bindgesture swipe:left workspace next

## Scratchpad:

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

## Resizing containers:

mode "resize" {
    # left will shrink the containers width
    # down will grow the containers height
    # up will shrink the containers height
    # right will grow the containers width
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+Shift+r mode "resize"

### Client rules

assign [app_id="firefox"] 1
assign [class="discord"] 2
assign [app_id="org.kde.dolphin"] 4
for_window [app_id="mpv"] floating enable
for_window [class="Sxiv"] floating enable
for_window [app_id="imv"] floating enable

exec_always $HOME/.local/bin/autostart.sh
